"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[577],{3577:function(e,a,t){t.d(a,{Gu:function(){return I},qN:function(){return b},MD:function(){return w},bZ:function(){return S},Wd:function(){return y},zR:function(){return o},bW:function(){return u},NC:function(){return p},eK:function(){return h},M_:function(){return m},Qc:function(){return f},p7:function(){return A},y4:function(){return g}});var i=t(7460),s=t(5642),r=JSON.parse('{"aws_project_region":"us-west-2","aws_user_pools_id":"us-west-2_r4a16tlRJ","aws_cognito_region":"us-west-2","aws_user_pools_web_client_id":"16c56shnjg48orsd12n33clakb","aws_cognito_identity_pool_id":"us-west-2:5cf9a58e-7d85-40c3-bb83-e0c4602a6af4","allowUnauthenticatedIdentities":"true","aws_cognito_signup_attributes":["EMAIL"],"aws_cognito_username_attributes":["EMAIL"],"aws_cognito_verification_mechanisms":["EMAIL"],"aws_cognito_password_protection_settings":{"passwordPolicyMinLength":8,"passwordPolicyCharacters":["REQUIRES_NUMBERS","REQUIRES_LOWERCASE","REQUIRES_UPPERCASE","REQUIRES_SYMBOLS"]},"aws_appsync_authenticationType":"AWS_IAM","aws_appsync_region":"us-west-2","aws_appsync_graphqlEndpoint":"https://2xnnbnhqtvh5hiti2cog2z5qym.appsync-api.us-west-2.amazonaws.com/graphql","modelIntrospection":{"version":1,"models":{"League":{"name":"League","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"name":{"name":"name","isArray":false,"type":"String","isRequired":true,"attributes":[]},"players":{"name":"players","isArray":true,"type":{"model":"Player"},"isRequired":false,"attributes":[],"isArrayNullable":true,"association":{"connectionType":"HAS_MANY","associatedWith":["leaguePlayersId"]}},"scores":{"name":"scores","isArray":true,"type":{"model":"Score"},"isRequired":false,"attributes":[],"isArrayNullable":true,"association":{"connectionType":"HAS_MANY","associatedWith":["leagueScoresId"]}},"matches":{"name":"matches","isArray":true,"type":{"model":"Match"},"isRequired":false,"attributes":[],"isArrayNullable":true,"association":{"connectionType":"HAS_MANY","associatedWith":["leagueMatchesId"]}},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]}},"syncable":true,"pluralName":"Leagues","attributes":[{"type":"model","properties":{}},{"type":"key","properties":{"fields":["id"]}},{"type":"auth","properties":{"rules":[{"allow":"custom","operations":["create","update","delete","read"]},{"allow":"public","provider":"iam","operations":["read","create"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}},"Player":{"name":"Player","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"name":{"name":"name","isArray":false,"type":"String","isRequired":true,"attributes":[]},"email":{"name":"email","isArray":false,"type":"String","isRequired":true,"attributes":[]},"scores":{"name":"scores","isArray":true,"type":{"model":"Score"},"isRequired":false,"attributes":[],"isArrayNullable":true,"association":{"connectionType":"HAS_MANY","associatedWith":["playerScoresId"]}},"matches":{"name":"matches","isArray":true,"type":{"model":"PlayerMatch"},"isRequired":false,"attributes":[],"isArrayNullable":true,"association":{"connectionType":"HAS_MANY","associatedWith":["player"]}},"league":{"name":"league","isArray":false,"type":{"model":"League"},"isRequired":false,"attributes":[],"association":{"connectionType":"BELONGS_TO","targetNames":["leaguePlayersId"]}},"leaguePlayersId":{"name":"leaguePlayersId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]}},"syncable":true,"pluralName":"Players","attributes":[{"type":"model","properties":{}},{"type":"key","properties":{"fields":["id"]}},{"type":"key","properties":{"name":"playersByEmail","queryField":"listByEmail","fields":["email"]}},{"type":"auth","properties":{"rules":[{"allow":"custom","operations":["create","update","delete","read"]},{"allow":"public","provider":"iam","operations":["read","create"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}},"Score":{"name":"Score","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"match":{"name":"match","isArray":false,"type":{"model":"Match"},"isRequired":false,"attributes":[],"association":{"connectionType":"BELONGS_TO","targetNames":["matchScoresId"]}},"player":{"name":"player","isArray":false,"type":{"model":"Player"},"isRequired":false,"attributes":[],"association":{"connectionType":"BELONGS_TO","targetNames":["playerScoresId"]}},"score":{"name":"score","isArray":false,"type":"Int","isRequired":true,"attributes":[]},"league":{"name":"league","isArray":false,"type":{"model":"League"},"isRequired":false,"attributes":[],"association":{"connectionType":"BELONGS_TO","targetNames":["leagueScoresId"]}},"leagueScoresId":{"name":"leagueScoresId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"playerScoresId":{"name":"playerScoresId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"matchScoresId":{"name":"matchScoresId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]}},"syncable":true,"pluralName":"Scores","attributes":[{"type":"model","properties":{}},{"type":"key","properties":{"fields":["id"]}},{"type":"auth","properties":{"rules":[{"allow":"custom","operations":["create","update","delete","read"]},{"allow":"public","provider":"iam","operations":["read","create"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}},"Match":{"name":"Match","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"date":{"name":"date","isArray":false,"type":"String","isRequired":true,"attributes":[]},"players":{"name":"players","isArray":true,"type":{"model":"PlayerMatch"},"isRequired":false,"attributes":[],"isArrayNullable":true,"association":{"connectionType":"HAS_MANY","associatedWith":["match"]}},"scores":{"name":"scores","isArray":true,"type":{"model":"Score"},"isRequired":false,"attributes":[],"isArrayNullable":true,"association":{"connectionType":"HAS_MANY","associatedWith":["matchScoresId"]}},"league":{"name":"league","isArray":false,"type":{"model":"League"},"isRequired":false,"attributes":[],"association":{"connectionType":"BELONGS_TO","targetNames":["leagueMatchesId"]}},"leagueMatchesId":{"name":"leagueMatchesId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]}},"syncable":true,"pluralName":"Matches","attributes":[{"type":"model","properties":{}},{"type":"key","properties":{"fields":["id"]}},{"type":"auth","properties":{"rules":[{"allow":"custom","operations":["create","update","delete","read"]},{"allow":"public","provider":"iam","operations":["read","create"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}},"PlayerMatch":{"name":"PlayerMatch","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"playerId":{"name":"playerId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"matchId":{"name":"matchId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"player":{"name":"player","isArray":false,"type":{"model":"Player"},"isRequired":true,"attributes":[],"association":{"connectionType":"BELONGS_TO","targetNames":["playerId"]}},"match":{"name":"match","isArray":false,"type":{"model":"Match"},"isRequired":true,"attributes":[],"association":{"connectionType":"BELONGS_TO","targetNames":["matchId"]}},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":false,"attributes":[],"isReadOnly":true},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":false,"attributes":[],"isReadOnly":true}},"syncable":true,"pluralName":"PlayerMatches","attributes":[{"type":"model","properties":{}},{"type":"key","properties":{"name":"byPlayer","fields":["playerId"]}},{"type":"key","properties":{"name":"byMatch","fields":["matchId"]}},{"type":"auth","properties":{"rules":[{"allow":"custom","operations":["create","update","delete","read"]},{"allow":"public","provider":"iam","operations":["read","create"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}}},"enums":{},"nonModels":{}},"aws_appsync_additionalAuthenticationTypes":"AWS_LAMBDA,AMAZON_COGNITO_USER_POOLS"}');let l=e=>new Promise(a=>setTimeout(a,e));i.V.configure(r);class n{static async getInstance(){return n.instance||(n.instance=new n,await n.instance.initialize()),n.instance}constructor(){this.client=(0,s.d)({authMode:"iam"}),this.players=[],this.matches=[],this.scores=[],this.leagues=[],this.isInitialized=()=>[...this.players,...this.matches,...this.scores,...this.leagues].length>0,this._initialize=async()=>{var e,a,t,i,s;this.clear();let r=await this.client.models.League.list({selectionSet:["id","name","players.*","scores.*","matches.*","createdAt"],limit:1e4}),l=(null===(e=r.data)||void 0===e?void 0:e.map)?null===(a=r.data)||void 0===a?void 0:a.map(e=>({...e,createdAt:new Date(e.createdAt)})):[],n=await this.client.models.Match.list({selectionSet:["id","date","players.*","scores.*","league.*"],limit:1e4}),d=(null===(t=n.data)||void 0===t?void 0:t.map)?null===(i=n.data)||void 0===i?void 0:i.map(e=>({...e,date:new Date(e.date)})):[],c=await this.client.models.Player.list({selectionSet:["id","name","email","matches.*","scores.*","league.*"],limit:1e4}),o=(null===(s=c.data)||void 0===s?void 0:s.map)?c.data.map(e=>{var a,t;return{id:e.id,name:e.name,email:e.email,matches:null!==(a=d.filter(a=>a.players.find(a=>a.playerId===e.id)).map(e=>({...e,date:new Date(e.date)})))&&void 0!==a?a:[],scores:null!==(t=e.scores)&&void 0!==t?t:[],league:l.find(a=>a.id===e.league.id)}}):[],u=(await this.client.models.Score.list({selectionSet:["id","score","match.*","player.*","league.*"],limit:1e4})).data.map(e=>({...e,player:e.player,match:{...e.match,date:new Date(e.match.date)},league:l.find(a=>a.id===e.league.id)})),y=n.data.map(e=>{var a,t;return{...e,date:new Date(e.date),players:null!==(t=null==e?void 0:null===(a=e.players)||void 0===a?void 0:a.map(e=>o.find(a=>a.id===e.playerId)))&&void 0!==t?t:[],league:l.find(a=>a.id===e.league.id)}}),p=l.map(e=>({...e,matches:d.filter(a=>a.league.id===e.id)}));this.players=o,this.scores=u,this.matches=y,this.leagues=p},this.clear=()=>{this.matches=[],this.scores=[],this.matches=[],this.leagues=[]},this.initialize=async e=>{e&&(this.client=e);try{await this._initialize()}catch(e){console.error("Failed to setup cache",e),await l(1e3),await this._initialize()}},this.hydrateLeague=async e=>(this.isInitialized()||await this.initialize(),this.leagues.find(a=>a.id===e)),this.hydratePlayer=async e=>(this.isInitialized()||await this.initialize(),this.players.find(a=>a.id===e)),this.hydrateScore=async e=>(this.isInitialized()||await this.initialize(),this.scores.find(a=>a.id===e)),this.hydrateMatch=async e=>(this.isInitialized()||await this.initialize(),this.matches.find(a=>a.id===e)),this.listLeagues=async()=>(this.isInitialized()||await this.initialize(),this.leagues),this.listPlayers=async()=>(this.isInitialized()||await this.initialize(),this.players),this.listMatches=async()=>(this.isInitialized()||await this.initialize(),this.matches),this.listScores=async()=>(this.isInitialized()||await this.initialize(),this.scores)}}i.V.configure(r);let d=(0,s.d)({authMode:"iam"}),c=async e=>(await n.getInstance()).hydrateLeague(e),o=async e=>(await n.getInstance()).hydratePlayer(e),u=async e=>(await n.getInstance()).hydrateScore(e),y=async e=>(await n.getInstance()).hydrateMatch(e),p=async()=>(await n.getInstance()).listLeagues(),m=async e=>{let a=await n.getInstance();return(await a.listPlayers()).filter(a=>a.league.id===e.id)},h=async e=>{let a=await n.getInstance();return(await a.listMatches()).filter(a=>a.league.id===e.id)},f=async e=>{let a=await n.getInstance();return(await a.listScores()).filter(a=>a.league.id===e.id)},A=e=>d.models.Score.onCreate().subscribe({next:async()=>{let a=await n.getInstance();await a.initialize(),e()},error:e=>{console.error("Subscription error",e)}}),g=e=>e.unsubscribe(),I=async e=>{let a=await d.models.League.create({name:e}),t=await n.getInstance();return await t.initialize(),await c(a.data.id)},w=async(e,a,t)=>{let i=await d.models.Player.create({name:a,email:t,leaguePlayersId:e.id}),s=await n.getInstance();return await s.initialize(),await o(i.data.id)},b=async(e,a,t)=>{let i=await d.models.Match.create({date:t.toISOString(),leagueMatchesId:e.id});await d.models.PlayerMatch.create({matchId:i.data.id,playerId:a[0].id}),await d.models.PlayerMatch.create({matchId:i.data.id,playerId:a[1].id});let s=await n.getInstance();await s.initialize()},S=async(e,a,t,i)=>{let s=await d.models.Score.create({score:i,playerScoresId:t.id,matchScoresId:a.id,leagueScoresId:e.id});return await u(s.data.id)}}}]);